---
env:
  GOVERSION: "1.21.1"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release-please:
    environment: release-please
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
    - id: release
      uses: google-github-actions/release-please-action@v4
      with:
        prerelease: true
        release-type: simple
        version-file: version.txt

  go-release:
    environment: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    needs: release-please
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git fetch --force --tags
    - uses: actions/setup-go@v4
      with:
        go-version: '>=${{ env.GOVERSION }}'
    - uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
  
  build-and-push-image:
    environment: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.releases_created }}
    needs: release-please
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
      - name: Get Commit Hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build and push Docker images
        uses: docker/build-push-action@v5          
        with:
          build-args: commithash=${{ steps.vars.outputs.sha_short }}
          github-token: ${{ secrets.RELEASE_TOKEN }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

name: Release Please
'on':
  push:
    branches:
    - main

permissions:
  contents: write
  issues: write
  packages: write
  pull-requests: write