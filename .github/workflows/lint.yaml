---
jobs:
  golangci:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.20.x'
      - name: Check out code
        uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v5
        with:
          version: latest

  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        verbose: true
        config: .hadolint.yaml

  build-image:
    runs-on: ubuntu-latest
    needs: lint-dockerfile
    name: Test Container Build
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
      - name: Get Commit Hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          build-args: commithash=${{ steps.vars.outputs.sha_short }}
          github-token: ${{ secrets.RELEASE_TOKEN }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'
    - name: Test
      run: go test -v -race ./...

  validate-binaries:
    needs: [test, golangci]
    name: Validate Binary Builds
    runs-on: ubuntu-latest
    env:
      GOVERSION: "1.21.1"
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git fetch --force --tags
    - uses: actions/setup-go@v5
      with:
        go-version: '>=${{ env.GOVERSION }}'
    - uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: latest
        args: build --clean --skip-validate

name: Lint & Test

on:
  pull_request:
    branches: [ "*" ]
